{
  "uuid": "djCi",
  "titre": "Classification des points d'un triangle",
  "theme": [
    "réseaux de neurones"
  ],
  "niveau": "",
  "metadata": {
    "auteur": "Maxime NGUYEN",
    "createdAt": "2024-12-13",
    "organisation": "AMSCC",
    "updatedAt": "2025-01-18T15:03:55.786Z"
  },
  "contenu": [
    {
      "id": "77adbd94-ed22-4356-bcb8-f6791a721e06",
      "type": "description",
      "value": {
        "latex": "On souhaite construire un réseau de neurones qui réalise une classification des points du plan $\\R^2$ selon que ces points appartiennent ou non au triangle $T$ dont les sommets sont les points de coordonnées respectives $(-1,-1),(-1,1),(1,1)$ comme ci-dessous.\n\t\n\t\\begin{center}\n\t\t__TIKZ_6619908d-fd9d-4f9c-9bed-ab9ce241aeaa__\n\t\\end{center}",
        "html": "<p>On souhaite construire un réseau de neurones qui réalise une\nclassification des points du plan <span\nclass=\"math inline\">\\(\\R^2\\)</span> selon que ces points appartiennent\nou non au triangle <span class=\"math inline\">\\(T\\)</span> dont les\nsommets sont les points de coordonnées respectives <span\nclass=\"math inline\">\\((-1,-1),(-1,1),(1,1)\\)</span> comme\nci-dessous.</p>\n<div class=\"center\">\n<p><svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='133.392pt' height='132.983pt' viewBox='0 0 133.392 132.983'><defs><font id='SSTPJT-CMR10' horiz-adv-x='0'><font-face font-family='SSTPJT-CMR10' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='-' horiz-adv-x='333' vert-adv-y='333' glyph-name='hyphen' d='M276 187V245H11V187H276Z'/><glyph unicode='1' horiz-adv-x='500' vert-adv-y='500' glyph-name='one' d='M294 640C294 664 294 666 271 666C209 602 121 602 89 602V571C109 571 168 571 220 597V79C220 43 217 31 127 31H95V0C130 3 217 3 257 3S384 3 419 0V31H387C297 31 294 42 294 79V640Z'/><glyph unicode='2' horiz-adv-x='500' vert-adv-y='500' glyph-name='two' d='M127 77L233 180C389 318 449 372 449 472C449 586 359 666 237 666C124 666 50 574 50 485C50 429 100 429 103 429C120 429 155 441 155 482C155 508 137 534 102 534C94 534 92 534 89 533C112 598 166 635 224 635C315 635 358 554 358 472C358 392 308 313 253 251L61 37C50 26 50 24 50 0H421L449 174H424C419 144 412 100 402 85C395 77 329 77 307 77H127Z'/></font><font id='FFANCX-CMMI10' horiz-adv-x='0'><font-face font-family='FFANCX-CMMI10' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='x' horiz-adv-x='571' vert-adv-y='571' glyph-name='x' d='M334 302C340 328 363 420 433 420C438 420 462 420 483 407C455 402 435 377 435 353C435 337 446 318 473 318C495 318 527 336 527 376C527 428 468 442 434 442C376 442 341 389 329 366C304 432 250 442 221 442C117 442 60 313 60 288C60 278 70 278 72 278C80 278 83 280 85 289C119 395 185 420 219 420C238 420 273 411 273 353C273 322 256 255 219 115C203 53 168 11 124 11C118 11 95 11 74 24C99 29 121 50 121 78C121 105 99 113 84 113C54 113 29 87 29 55C29 9 79-11 123-11C189-11 225 59 228 65C240 28 276-11 336-11C439-11 496 118 496 143C496 153 487 153 484 153C475 153 473 149 471 142C438 35 370 11 338 11C299 11 283 43 283 77C283 99 289 121 300 165L334 302Z'/><glyph unicode='y' horiz-adv-x='490' vert-adv-y='490' glyph-name='y' d='M486 381C490 395 490 397 490 404C490 422 476 431 461 431C451 431 435 425 426 410C424 405 416 374 412 356C405 330 398 303 392 276L347 96C343 81 300 11 234 11C183 11 172 55 172 92C172 138 189 200 223 288C239 329 243 340 243 360C243 405 211 442 161 442C66 442 29 297 29 288C29 278 39 278 41 278C51 278 52 280 57 296C84 390 124 420 158 420C166 420 183 420 183 388C183 363 173 337 166 318C126 212 108 155 108 108C108 19 171-11 230-11C269-11 303 6 331 34C318-18 306-67 266-120C240-154 202-183 156-183C142-183 97-180 80-141C96-141 109-141 123-129C133-120 143-107 143-88C143-57 116-53 106-53C83-53 50-69 50-118C50-168 94-205 156-205C259-205 362-114 390-1L486 381Z'/></font></defs><style type='text/css'><![CDATA[text.f0 {font-family:FFANCX-CMMI10;font-size:9.96px} text.f1 {font-family:SSTPJT-CMR10;font-size:9.96px} ]]></style><g id='page1'><path d='M7.47138 126.45259H120.85862M7.47138 112.27919H120.85862M7.47138 98.10579H120.85862M7.47138 83.93239H120.85862M7.47138 69.759H120.85862M7.47138 55.58561H120.85862M7.47138 41.41221H120.85862M7.47138 27.23881H120.85862M7.47138 13.06541H120.85862M7.47141 126.45262V13.06538M21.64481 126.45262V13.06538M35.81821 126.45262V13.06538M49.99161 126.45262V13.06538M64.165 126.45262V13.06538M78.33839 126.45262V13.06538M92.51179 126.45262V13.06538M106.68519 126.45262V13.06538M120.85859 126.45262V13.06538' stroke='#bfbfbf' fill='none' stroke-width='.19925' stroke-miterlimit='10'/><path d='M7.47138 126.45262H120.85862M7.47138 98.1058H120.85862M7.47138 69.759H120.85862M7.47138 41.4122H120.85862M7.47138 13.07535H120.85862M7.47138 126.45262V13.06538M35.8182 126.45262V13.06538M64.165 126.45262V13.06538M92.5118 126.45262V13.06538M120.84865 126.45262V13.06538' stroke='#808080' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><path d='M7.47138 69.759H120.4601' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><path d='M118.58711 67.36796C118.9657 68.80261 119.80936 69.48005 120.65935 69.759C119.80936 70.03795 118.9657 70.71539 118.58711 72.15004' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10' stroke-linejoin='round' stroke-linecap='round'/><text class='f0' x='124.344541' y='-61.06306' transform='matrix(.999739 0 0 .999739 0 132.983)'>x</text><path d='M64.165 126.45262V13.4639' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><path d='M61.77396 15.336892C63.20861 14.958302 63.88605 14.114642 64.165 13.264652C64.44395 14.114642 65.12139 14.958302 66.55604 15.336892' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10' stroke-linejoin='round' stroke-linecap='round'/><text class='f0' x='61.527938' y='-125.340281' transform='matrix(.999739 0 0 .999739 .000004 132.983)'>y</text><path d='M35.8182 98.1058V41.4122H92.5118Z' fill='#fcc'/><path d='M35.8182 98.1058V41.4122H92.5118Z' stroke='#f00' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M7.47138 69.759H120.4601' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><path d='M118.58711 67.36796C118.9657 68.80261 119.80936 69.48005 120.65935 69.759C119.80936 70.03795 118.9657 70.71539 118.58711 72.15004' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10' stroke-linejoin='round' stroke-linecap='round'/><text class='f0' x='124.344541' y='-61.06306' transform='matrix(.999739 0 0 .999739 0 132.983)'>x</text><path d='M64.165 126.45262V13.4639' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><path d='M61.77396 15.336892C63.20861 14.958302 63.88605 14.114642 64.165 13.264652C64.44395 14.114642 65.12139 14.958302 66.55604 15.336892' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10' stroke-linejoin='round' stroke-linecap='round'/><text class='f0' x='61.527938' y='-125.340281' transform='matrix(.999739 0 0 .999739 .000004 132.983)'>y</text><path d='M7.47138 68.3416V71.1764' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='3.320133' y='-51.852464' transform='matrix(.999739 0 0 .999739 0 132.983)'>-2</text><path d='M35.8182 68.3416V71.1764' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='31.658736' y='-51.852464' transform='matrix(.999739 0 0 .999739 0 132.983)'>-1</text><path d='M92.5118 68.3416V71.1764' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='89.996507' y='-51.852464' transform='matrix(.999739 0 0 .999739 .000008 132.983)'>1</text><path d='M120.85862 68.3416V71.1764' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='118.336109' y='-51.852464' transform='matrix(.999739 0 0 .999739 .000008 132.983)'>2</text><path d='M65.5824 126.45262H62.7476' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='50.91171' y='-3.320133' transform='matrix(.999739 0 0 .999739 .000004 132.983)'>-2</text><path d='M65.5824 98.1058H62.7476' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='50.91171' y='-31.658736' transform='matrix(.999739 0 0 .999739 .000004 132.983)'>-1</text><path d='M65.5824 41.4122H62.7476' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='54.231843' y='-88.33694' transform='matrix(.999739 0 0 .999739 .000004 132.983)'>1</text><path d='M65.5824 13.06538H62.7476' stroke='#000' fill='none' stroke-width='.3985' stroke-miterlimit='10'/><text class='f1' x='54.231843' y='-116.675543' transform='matrix(.999739 0 0 .999739 .000004 132.983)'>2</text></g></svg></p>\n</div>\n"
      }
    },
    {
      "id": "2b5f5cc7-09a7-4984-af7f-772052f68066",
      "type": "question",
      "value": {
        "latex": "Démontrer que le perceptron défini ci-dessous réalise l'opération logique $x$ ET $y$ ET $z$ où $(x,y,z) \\in \\{0,1\\}^3$. \n\t\t\n\t\t\\begin{center}\n\t\t\t__TIKZ_7a929c62-727f-48d2-ad35-f8ff735bcd5d__  \n\t\t\\end{center}",
        "html": "<p>Démontrer que le perceptron défini ci-dessous réalise l’opération\nlogique <span class=\"math inline\">\\(x\\)</span> ET <span\nclass=\"math inline\">\\(y\\)</span> ET <span\nclass=\"math inline\">\\(z\\)</span> où <span class=\"math inline\">\\((x,y,z)\n\\in \\{0,1\\}^3\\)</span>.</p>\n<div class=\"center\">\n<p><svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='147.557pt' height='73.651pt' viewBox='0 0 147.557 73.651'><defs><font id='PXBGHL-CMSY7' horiz-adv-x='0'><font-face font-family='PXBGHL-CMSY7' units-per-em='1000' ascent='782' descent='951'/><glyph unicode='−' horiz-adv-x='892' vert-adv-y='892' glyph-name='minus' d='M744 226C760 226 784 226 784 250C784 275 761 275 744 275H148C132 275 108 275 108 251C108 226 131 226 148 226H744Z'/></font><font id='FXMJUA-CMMI7' horiz-adv-x='0'><font-face font-family='FXMJUA-CMMI7' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='H' horiz-adv-x='935' vert-adv-y='935' glyph-name='H' d='M841 602C850 639 852 647 926 647C948 647 960 647 960 669C960 673 957 683 944 683C915 683 842 679 813 679C796 679 761 679 744 680C724 681 700 683 681 683C675 683 660 683 660 661C660 647 672 647 692 647C693 647 712 647 730 645C751 643 753 641 753 631C753 630 753 624 749 609L690 373H355L413 605C422 639 424 647 501 647C518 647 531 647 531 669C531 673 528 683 515 683C486 683 413 679 384 679C367 679 332 679 315 680C295 681 271 683 252 683C246 683 231 683 231 661C231 647 243 647 263 647C264 647 283 647 301 645C322 643 324 641 324 631C324 629 324 624 320 609L187 78C179 44 177 36 99 36C82 36 69 36 69 15C69 5 76 0 85 0C114 0 186 4 215 4C232 4 267 4 284 3C304 2 329 0 348 0C353 0 369 0 369 21C369 36 359 36 336 36C320 36 316 36 298 38C276 41 276 43 276 53C276 54 276 60 280 75L346 337H681L616 78C608 44 606 36 528 36C511 36 498 36 498 15C498 5 505 0 514 0C543 0 615 4 644 4C661 4 696 4 713 3C733 2 758 0 777 0C782 0 798 0 798 21C798 36 788 36 765 36C749 36 745 36 727 38C705 41 705 43 705 53C705 59 708 69 709 75L841 602Z'/><glyph unicode='x' horiz-adv-x='647' vert-adv-y='647' glyph-name='x' d='M249 106C239 72 206 18 155 18C152 18 122 18 101 32C142 45 145 81 145 87C145 109 128 124 105 124C77 124 48 100 48 63C48 13 104-10 153-10C199-10 240 19 265 61C289 8 344-10 384-10C499-10 560 115 560 143C560 156 547 156 544 156C530 156 529 151 525 139C504 70 444 18 388 18C348 18 327 45 327 83C327 109 351 200 379 311C399 388 444 413 477 413C479 413 510 413 531 399C499 390 487 362 487 344C487 322 504 307 527 307S583 326 583 368C583 424 519 441 479 441C429 441 389 408 367 370C349 411 303 441 247 441C135 441 71 318 71 288C71 275 85 275 88 275C101 275 102 279 107 292C132 370 195 413 244 413C277 413 304 395 304 347C304 327 292 277 283 243L249 106Z'/><glyph unicode='y' horiz-adv-x='579' vert-adv-y='579' glyph-name='y' d='M556 377C560 391 560 393 560 399C560 419 544 431 527 431C516 431 497 426 486 407C483 401 475 369 470 349L449 266C443 242 412 116 409 105C408 105 364 18 286 18C218 18 218 83 218 101C218 155 241 218 271 295C283 327 288 339 288 356C288 404 247 441 193 441C92 441 47 305 47 288C47 275 61 275 64 275C78 275 79 280 82 291C107 374 150 413 190 413C207 413 215 402 215 378C215 355 206 333 201 320C153 198 143 161 143 117C143 100 143 53 182 21C213-5 255-10 282-10C322-10 358 5 391 35C378-20 367-62 325-112C298-143 258-176 205-176C198-176 151-176 130-143C184-137 184-89 184-88C184-56 155-50 145-50C120-50 87-70 87-116C87-167 135-204 206-204C307-204 430-126 461-1L556 377Z'/><glyph unicode='z' horiz-adv-x='545' vert-adv-y='545' glyph-name='z' d='M168 88C194 114 212 133 297 201C318 218 393 278 422 306C483 366 521 417 521 429S508 441 504 441C495 441 492 439 487 431C456 385 435 370 411 370C399 370 384 371 354 400C320 434 298 441 275 441C195 441 141 354 141 324C141 315 151 312 158 312C170 312 172 315 176 326C191 361 247 363 263 363C286 363 312 357 326 354C381 342 388 342 413 342C387 315 369 297 274 221C196 159 169 134 150 114C90 55 61 11 61 2C61-10 74-10 78-10C88-10 90-8 95 0C122 38 153 61 187 61C199 61 214 60 241 35C272 5 292-10 324-10C431-10 498 111 498 145C498 157 487 158 481 158C469 158 467 153 463 142C444 92 385 68 336 68C313 68 288 73 263 79C217 89 209 89 191 89C189 89 174 89 168 88Z'/></font><font id='GCEADL-CMR7' horiz-adv-x='0'><font-face font-family='GCEADL-CMR7' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='1' horiz-adv-x='569' vert-adv-y='569' glyph-name='one' d='M335 636C335 663 333 664 305 664C241 601 150 600 109 600V564C133 564 199 564 254 592V82C254 49 254 36 154 36H116V0C134 1 257 4 294 4C325 4 451 1 473 0V36H435C335 36 335 49 335 82V636Z'/><glyph unicode='3' horiz-adv-x='569' vert-adv-y='569' glyph-name='three' d='M273 334C351 334 407 280 407 173C407 49 335 12 277 12C237 12 149 23 107 82C154 84 165 117 165 138C165 170 141 193 110 193C82 193 54 176 54 135C54 41 158-20 279-20C418-20 514 73 514 173C514 251 450 329 340 352C445 390 483 465 483 526C483 605 392 664 281 664S85 610 85 530C85 496 107 477 137 477C168 477 188 500 188 528C188 557 168 578 137 580C172 624 241 635 278 635C323 635 386 613 386 526C386 484 372 438 346 407C313 369 285 367 235 364C210 362 208 362 203 361C201 361 193 359 193 348C193 334 202 334 219 334H273Z'/></font></defs><style type='text/css'><![CDATA[text.f0 {font-family:GCEADL-CMR7;font-size:6.97px} text.f1 {font-family:FXMJUA-CMMI7;font-size:6.97px} text.f2 {font-family:PXBGHL-CMSY7;font-size:6.97px} ]]></style><g id='page1'><path d='M104.24037 38.838C104.24037 24.74773 92.81827 13.32563 78.728 13.32563S53.21563 24.74773 53.21563 38.838S64.63773 64.35037 78.728 64.35037S104.24037 52.92827 104.24037 38.838Z' fill='#e6e6e6'/><path d='M104.24037 38.838C104.24037 24.74773 92.81827 13.32563 78.728 13.32563S53.21563 24.74773 53.21563 38.838S64.63773 64.35037 78.728 64.35037S104.24037 52.92827 104.24037 38.838Z' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M56.63358 26.08184L19.80951 4.8215' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><text class='f0' x='47.258235' y='-55.908519' transform='matrix(.999455 0 0 .999455 -.000004 73.651)'>1</text><text class='f1' x='11.168911' y='-67.291313' transform='matrix(.999455 0 0 .999455 -.000005 73.651)'>x</text><path d='M53.60297 34.40792L11.7279 27.02442' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><text class='f0' x='43.219437' y='-44.812568' transform='matrix(.999455 0 0 .999455 -.000004 73.651)'>1</text><text class='f1' x='3.31919' y='-45.778042' transform='matrix(.999455 0 0 .999455 0 73.651)'>y</text><path d='M53.60297 43.26808L11.7279 50.65158' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><text class='f0' x='43.219437' y='-33.006005' transform='matrix(.999455 0 0 .999455 -.000004 73.651)'>1</text><text class='f1' x='3.517083' y='-21.486286' transform='matrix(.999455 0 0 .999455 -.000003 73.651)'>z</text><path d='M56.63358 51.59416L26.0905 69.22824' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><path d='M20.499779 72.455961C21.391098 73.999806 23.365159 74.528774 24.909003 73.637454C26.452857 72.74613 26.981816 70.772075 26.090497 69.22823S23.225126 67.155412 21.681273 68.046736C20.137428 68.938056 19.60846 70.912116 20.499779 72.455961Z' stroke='#000' fill='none' stroke-width='1.594003' stroke-miterlimit='10'/><text class='f2' x='44.145932' y='-9.187991' transform='matrix(.999455 0 0 .999455 0 73.651)'>−</text><text class='f0' x='50.369539' y='-9.187991' transform='matrix(.999455 0 0 .999455 0 73.651)'>3</text><path d='M104.24037 38.838H139.94654' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><path d='M146.76102 38.838C144.74187 38.45943 141.46087 37.32367 139.18938 35.99864V41.67736C141.46087 40.35233 144.74187 39.21657 146.76102 38.838'/><text class='f1' x='106.832755' y='-19.914143' transform='matrix(.999455 0 0 .999455 0 73.651)'>H</text></g></svg></p>\n</div>\n"
      }
    },
    {
      "id": "321e2303-3350-41ed-9880-3856fb1f074b",
      "type": "reponse",
      "value": {
        "latex": "Si $(x,y,z) = (1,1,1)$ alors $x$ ET $y$ ET $z$ vaut $1$, $0$ dans tous les autres cas. \n\nOr ce perceptron renvoie $1$ si et seulement si $x+y+z \\geq 3$. Donc si $x=y=z=1$ alors la sortie vaut $1$. Si $x=0$ ou $y=0$ ou $z=0$ alors $x+y+z \\leq 2 < 3$ et la sortie vaut $0$.",
        "html": "<p>Si <span class=\"math inline\">\\((x,y,z) = (1,1,1)\\)</span> alors <span\nclass=\"math inline\">\\(x\\)</span> ET <span\nclass=\"math inline\">\\(y\\)</span> ET <span\nclass=\"math inline\">\\(z\\)</span> vaut <span\nclass=\"math inline\">\\(1\\)</span>, <span class=\"math inline\">\\(0\\)</span>\ndans tous les autres cas.</p>\n<p>Or ce perceptron renvoie <span class=\"math inline\">\\(1\\)</span> si et\nseulement si <span class=\"math inline\">\\(x+y+z \\geq 3\\)</span>. Donc si\n<span class=\"math inline\">\\(x=y=z=1\\)</span> alors la sortie vaut <span\nclass=\"math inline\">\\(1\\)</span>. Si <span\nclass=\"math inline\">\\(x=0\\)</span> ou <span\nclass=\"math inline\">\\(y=0\\)</span> ou <span\nclass=\"math inline\">\\(z=0\\)</span> alors <span\nclass=\"math inline\">\\(x+y+z \\leq 2 &lt; 3\\)</span> et la sortie vaut\n<span class=\"math inline\">\\(0\\)</span>.</p>\n"
      }
    },
    {
      "id": "8ed0829c-96a4-40d1-8c78-852774e44d42",
      "type": "question",
      "value": {
        "latex": "En déduire un réseau de neurones prenant un vecteur $(x,y) \\in \\R^2$ en entrée et renvoyant \n\t\t$1$ si $(x,y) \\in T$, $0$ sinon.",
        "html": "<p>En déduire un réseau de neurones prenant un vecteur <span\nclass=\"math inline\">\\((x,y) \\in \\R^2\\)</span> en entrée et renvoyant\n<span class=\"math inline\">\\(1\\)</span> si <span\nclass=\"math inline\">\\((x,y) \\in T\\)</span>, <span\nclass=\"math inline\">\\(0\\)</span> sinon.</p>\n"
      }
    },
    {
      "id": "134f2570-64b8-4cea-b038-a75b5522bc5a",
      "type": "reponse",
      "value": {
        "latex": "Le triangle est l'intersection de trois demi plans définis par ces inéquations : \n\t\t$\\begin{cases}\n\t\t\tx + 1 \\geq 0 \\\\\n\t\t\t-y +1 \\geq 0 \\\\\n\t\t\t-x + y \\geq 0\n\t\t \\end{cases}$\n\t\t d'où le réseau à deux couches suivant où chaque perceptron de la première couche réalise une inéquation et celui de la seconde couche réalise l'intersection :\n\t\t \n__TIKZ_51dc4332-5ecc-4708-8fbb-3bd8887a0479__  \t\n\nToutes les fonctions d'activation sont la fonction Heaviside.",
        "html": "<p>Le triangle est l’intersection de trois demi plans définis par ces\ninéquations : <span class=\"math inline\">\\(\\begin{cases}\n            x + 1 \\geq 0 \\\\\n            -y +1 \\geq 0 \\\\\n            -x + y \\geq 0\n         \\end{cases}\\)</span> d’où le réseau à deux couches suivant où\nchaque perceptron de la première couche réalise une inéquation et celui\nde la seconde couche réalise l’intersection :</p>\n<p><svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='256.718pt' height='139.514pt' viewBox='0 0 256.718 139.514'><defs><font id='FXXUVH-CMSY10' horiz-adv-x='0'><font-face font-family='FXXUVH-CMSY10' units-per-em='1000' ascent='775' descent='960'/><glyph unicode='−' horiz-adv-x='777' vert-adv-y='777' glyph-name='minus' d='M659 230C676 230 694 230 694 250S676 270 659 270H118C101 270 83 270 83 250S101 230 118 230H659Z'/></font><font id='EKPGPS-CMR10' horiz-adv-x='0'><font-face font-family='EKPGPS-CMR10' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='(' horiz-adv-x='388' vert-adv-y='388' glyph-name='parenleft' d='M331-240C331-237 331-235 314-218C189-92 157 97 157 250C157 424 195 598 318 723C331 735 331 737 331 740C331 747 327 750 321 750C311 750 221 682 162 555C111 445 99 334 99 250C99 172 110 51 165-62C225-185 311-250 321-250C327-250 331-247 331-240Z'/><glyph unicode=')' horiz-adv-x='388' vert-adv-y='388' glyph-name='parenright' d='M289 250C289 328 278 449 223 562C163 685 77 750 67 750C61 750 57 746 57 740C57 737 57 735 76 717C174 618 231 459 231 250C231 79 194-97 70-223C57-235 57-237 57-240C57-246 61-250 67-250C77-250 167-182 226-55C277 55 289 166 289 250Z'/><glyph unicode='0' horiz-adv-x='500' vert-adv-y='500' glyph-name='zero' d='M460 320C460 400 455 480 420 554C374 650 292 666 250 666C190 666 117 640 76 547C44 478 39 400 39 320C39 245 43 155 84 79C127-2 200-22 249-22C303-22 379-1 423 94C455 163 460 241 460 320ZM249 0C210 0 151 25 133 121C122 181 122 273 122 332C122 396 122 462 130 516C149 635 224 644 249 644C282 644 348 626 367 527C377 471 377 395 377 332C377 257 377 189 366 125C351 30 294 0 249 0Z'/><glyph unicode='1' horiz-adv-x='500' vert-adv-y='500' glyph-name='one' d='M294 640C294 664 294 666 271 666C209 602 121 602 89 602V571C109 571 168 571 220 597V79C220 43 217 31 127 31H95V0C130 3 217 3 257 3S384 3 419 0V31H387C297 31 294 42 294 79V640Z'/><glyph unicode='3' horiz-adv-x='500' vert-adv-y='500' glyph-name='three' d='M290 352C372 379 430 449 430 528C430 610 342 666 246 666C145 666 69 606 69 530C69 497 91 478 120 478C151 478 171 500 171 529C171 579 124 579 109 579C140 628 206 641 242 641C283 641 338 619 338 529C338 517 336 459 310 415C280 367 246 364 221 363C213 362 189 360 182 360C174 359 167 358 167 348C167 337 174 337 191 337H235C317 337 354 269 354 171C354 35 285 6 241 6C198 6 123 23 88 82C123 77 154 99 154 137C154 173 127 193 98 193C74 193 42 179 42 135C42 44 135-22 244-22C366-22 457 69 457 171C457 253 394 331 290 352Z'/></font><font id='JGQGHY-CMMI10' horiz-adv-x='0'><font-face font-family='JGQGHY-CMMI10' units-per-em='1000' ascent='750' descent='250'/><glyph unicode=',' horiz-adv-x='277' vert-adv-y='277' glyph-name='comma' d='M203 1C203 67 178 106 139 106C106 106 86 81 86 53C86 26 106 0 139 0C151 0 164 4 174 13C177 15 178 16 179 16S181 15 181 1C181-73 146-133 113-166C102-177 102-179 102-182C102-189 107-193 112-193C123-193 203-116 203 1Z'/><glyph unicode='F' horiz-adv-x='643' vert-adv-y='643' glyph-name='F' d='M303 325H400C475 325 483 309 483 280C483 273 483 261 476 231C474 226 473 222 473 220C473 212 479 208 485 208C495 208 495 211 500 229L555 446C558 457 558 459 558 462C558 464 556 473 546 473S535 468 531 452C510 374 487 356 402 356H311L375 610C384 645 385 649 429 649H561C684 649 707 616 707 539C707 516 707 512 704 485C702 472 702 470 702 467C702 462 705 455 714 455C725 455 726 461 728 480L748 653C751 680 746 680 721 680H231C211 680 201 680 201 660C201 649 210 649 229 649C266 649 294 649 294 631C294 627 294 625 289 607L157 78C147 39 145 31 66 31C49 31 38 31 38 12C38 0 50 0 53 0C82 0 156 3 185 3C218 3 301 0 334 0C343 0 355 0 355 19C355 27 349 29 349 30C346 31 344 31 321 31C299 31 294 31 269 33C240 36 237 40 237 53C237 55 237 61 241 76L303 325Z'/><glyph unicode='x' horiz-adv-x='571' vert-adv-y='571' glyph-name='x' d='M334 302C340 328 363 420 433 420C438 420 462 420 483 407C455 402 435 377 435 353C435 337 446 318 473 318C495 318 527 336 527 376C527 428 468 442 434 442C376 442 341 389 329 366C304 432 250 442 221 442C117 442 60 313 60 288C60 278 70 278 72 278C80 278 83 280 85 289C119 395 185 420 219 420C238 420 273 411 273 353C273 322 256 255 219 115C203 53 168 11 124 11C118 11 95 11 74 24C99 29 121 50 121 78C121 105 99 113 84 113C54 113 29 87 29 55C29 9 79-11 123-11C189-11 225 59 228 65C240 28 276-11 336-11C439-11 496 118 496 143C496 153 487 153 484 153C475 153 473 149 471 142C438 35 370 11 338 11C299 11 283 43 283 77C283 99 289 121 300 165L334 302Z'/><glyph unicode='y' horiz-adv-x='490' vert-adv-y='490' glyph-name='y' d='M486 381C490 395 490 397 490 404C490 422 476 431 461 431C451 431 435 425 426 410C424 405 416 374 412 356C405 330 398 303 392 276L347 96C343 81 300 11 234 11C183 11 172 55 172 92C172 138 189 200 223 288C239 329 243 340 243 360C243 405 211 442 161 442C66 442 29 297 29 288C29 278 39 278 41 278C51 278 52 280 57 296C84 390 124 420 158 420C166 420 183 420 183 388C183 363 173 337 166 318C126 212 108 155 108 108C108 19 171-11 230-11C269-11 303 6 331 34C318-18 306-67 266-120C240-154 202-183 156-183C142-183 97-180 80-141C96-141 109-141 123-129C133-120 143-107 143-88C143-57 116-53 106-53C83-53 50-69 50-118C50-168 94-205 156-205C259-205 362-114 390-1L486 381Z'/></font></defs><style type='text/css'><![CDATA[text.f0 {font-family:JGQGHY-CMMI10;font-size:9.96px} text.f1 {font-family:EKPGPS-CMR10;font-size:9.96px} text.f2 {font-family:FXXUVH-CMSY10;font-size:9.96px} ]]></style><g id='page1'><text class='f0' x='3.320133' y='-110.103258' transform='matrix(.999739 0 0 .999739 0 139.514)'><tspan fill='#00f'>x</tspan></text><text class='f0' x='3.546074' y='-26.054199' transform='matrix(.999739 0 0 .999739 -.000003 139.514)'><tspan fill='#00f'>y</tspan></text><path d='M97.18466 5.977005C97.18466 2.675605 94.5084-.000655 91.207-.000655S85.22934 2.675605 85.22934 5.977005S87.9056 11.954665 91.207 11.954665S97.18466 9.278405 97.18466 5.977005Z' fill='#80ff80'/><path d='M97.18466 69.757305C97.18466 66.455905 94.5084 63.779645 91.207 63.779645S85.22934 66.455905 85.22934 69.757305C85.22934 73.058715 87.9056 75.734975 91.207 75.734975S97.18466 73.058715 97.18466 69.757305Z' fill='#80ff80'/><path d='M97.18466 133.537625C97.18466 130.236225 94.5084 127.559965 91.207 127.559965S85.22934 130.236225 85.22934 133.537625C85.22934 136.839055 87.9056 139.515295 91.207 139.515295S97.18466 136.839055 97.18466 133.537625Z' fill='#80ff80'/><path d='M182.2251 69.757325C182.2251 66.455905 179.54886 63.779665 176.24744 63.779665C172.94603 63.779665 170.26977 66.455905 170.26977 69.757325C170.26977 73.058735 172.94603 75.734985 176.24744 75.734985C179.54886 75.734985 182.2251 73.058735 182.2251 69.757325Z' fill='#ff8080'/><path d='M12.5238 25.649715L85.21384 7.475115' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='68.91501' y='-130.97281' transform='matrix(.699817 0 0 .699817 20.679902 100.21191)'>1</text><path d='M11.45987 105.656495L87.34816 10.800645' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='66.063754' y='-112.31668' transform='matrix(.699817 0 0 .699817 19.824303 105.8102)'>0</text><path d='M89.09412 11.781925L81.42616 32.849075' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M79.708907 37.567259C81.011811 38.041469 82.452421 37.369685 82.926628 36.06679C83.400842 34.763877 82.729064 33.32328 81.42616 32.849069S78.682653 33.046624 78.208439 34.349537C77.734232 35.652432 78.406003 37.093048 79.708907 37.567259Z' stroke='#000' fill='none' stroke-width='.796998' stroke-miterlimit='10'/><text class='f1' x='86.914312' y='-107.526931' transform='matrix(.699817 0 0 .699817 26.081109 107.247509)'>1</text><path d='M12.5238 30.423555L85.68167 67.002965' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='69.288913' y='-82.408488' transform='matrix(.699817 0 0 .699817 20.792099 114.785)'>0</text><path d='M12.29777 109.220825L85.68204 72.528045' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f2' x='66.532632' y='-62.816602' transform='matrix(.699817 0 0 .699817 19.965 120.66411)'>−</text><text class='f1' x='74.27961' y='-62.816602' transform='matrix(.699817 0 0 .699817 19.965 120.66411)'>1</text><path d='M87.23692 74.497865L72.82596 91.671125' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M69.598433 95.51719C70.660508 96.408458 72.243981 96.269986 73.135242 95.207918C74.026517 94.145834 73.888046 92.562376 72.82597 91.671108S70.180435 90.918297 69.28916 91.98038C68.397899 93.042448 68.536357 94.625922 69.598433 95.51719Z' stroke='#000' fill='none' stroke-width='.796983' stroke-miterlimit='10'/><text class='f1' x='80.871889' y='-47.244667' transform='matrix(.699817 0 0 .699817 24.267899 125.3369)'>1</text><path d='M10.68538 32.904935L87.34778 128.729805' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f2' x='82.262526' y='-23.546853' transform='matrix(.699817 0 0 .699817 24.6852 132.4481)'>−</text><text class='f1' x='90.009504' y='-23.546853' transform='matrix(.699817 0 0 .699817 24.6852 132.4481)'>1</text><path d='M12.29777 113.825285L85.21364 132.056105' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='68.869022' y='-13.705422' transform='matrix(.699817 0 0 .699817 20.6661 135.4013)'>1</text><path d='M96.14894 9.683535L171.31584 66.058545' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='154.497669' y='-87.311208' transform='matrix(.699817 0 0 .699817 46.361398 113.313808)'>1</text><path d='M97.38455 69.765655L170.08025 69.765565' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='153.756863' y='-62.63465' transform='matrix(.699817 0 0 .699817 46.1391 120.718708)'>1</text><path d='M96.1495 129.847405L171.31624 73.472205' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><text class='f1' x='154.498669' y='-47.657559' transform='matrix(.699817 0 0 .699817 46.361703 125.213)'>1</text><path d='M174.14705 75.570895L166.47736 96.637355' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M164.759716 101.355389C166.062578 101.82971 167.503244 101.15805 167.977562 99.855197C168.451887 98.552325 167.780232 97.111671 166.47737 96.63735S163.733848 96.834671 163.259523 98.137542C162.785205 99.440395 163.456853 100.881068 164.759716 101.355389Z' stroke='#000' fill='none' stroke-width='.796997' stroke-miterlimit='10'/><text class='f2' x='171.942116' y='-43.755578' transform='matrix(.699817 0 0 .699817 51.5961 126.383899)'>−</text><text class='f1' x='179.689093' y='-43.755578' transform='matrix(.699817 0 0 .699817 51.5961 126.383899)'>3</text><path d='M182.43538 69.766125L217.98102 69.765105' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M215.829049 66.654283C216.295037 68.520837 217.333394 69.402198 218.37952 69.76512C217.333408 70.128084 216.295087 71.009487 215.829173 72.876059' stroke='#000' fill='none' stroke-width='.796994' stroke-miterlimit='10' stroke-linejoin='round' stroke-linecap='round'/><text class='f0' x='222.436934' y='-67.241447' transform='matrix(.999739 0 0 .999739 0 139.514)'><tspan fill='#00f'>F</tspan></text><text class='f1' x='230.225901' y='-67.241447' transform='matrix(.999739 0 0 .999739 0 139.514)'><tspan fill='#00f'>(</tspan></text><text class='f0' x='234.09888' y='-67.241447' transform='matrix(.999739 0 0 .999739 0 139.514)'><tspan fill='#00f'>x,</tspan><tspan fill='#00f' x='244.228206'>y</tspan></text><text class='f1' x='249.45887' y='-67.241447' transform='matrix(.999739 0 0 .999739 0 139.514)'><tspan fill='#00f'>)</tspan></text></g></svg></p>\n<p>Toutes les fonctions d’activation sont la fonction Heaviside.</p>\n"
      }
    },
    {
      "id": "7deb6d13-c6fe-4390-92bc-17df4f143776",
      "type": "question",
      "value": {
        "latex": "Soit $P$ un polygône convexe du plan à 10 côtés. Décrire l'architecture d'un réseau de neurones permettant de réaliser une classification des points appartenant à l'intérieur de ce polygône.",
        "html": "<p>Soit <span class=\"math inline\">\\(P\\)</span> un polygône convexe du\nplan à 10 côtés. Décrire l’architecture d’un réseau de neurones\npermettant de réaliser une classification des points appartenant à\nl’intérieur de ce polygône.</p>\n"
      }
    },
    {
      "id": "1fd6ee16-8585-4381-b93f-12642fe6e48e",
      "type": "reponse",
      "value": {
        "latex": "Un polygône convexe est l'intersection de $10$ demi plans. Pour le réaliser, on peut décrire un réseau de neurones à deux couches prenant en entrée un vecteur $(x,y) \\in \\R^2$ : \n\t\\begin{itemize}\n\t\t\\item La première couche est constituée de $10$ neurones réalisant les $10$ demi plans ;\n\t\t\\item La seconde couche est constituée de $1$ neurone réalisant la fonction logique \\texttt{ET} sur $\\{0,1\\}^{10}$ : il suffit de prendre par exemple : \n\t\t\n\t\t\t\t\\begin{center}\n\t\t\t__TIKZ_ed816bd7-aac6-4fc1-b2eb-736e73e49521__  \n\t\t\\end{center}\n\tavec $(x_1,\\cdots,x_{10}) \\in \\{0,1\\}^{10}$ en entrée, les poids $(a_1,\\cdots,a_{10}) = (1,\\cdots,1)$, un biais $a_{11} = -10$ et une fonction d'activation Heaviside.\n\t\\end{itemize}",
        "html": "<p>Un polygône convexe est l’intersection de <span\nclass=\"math inline\">\\(10\\)</span> demi plans. Pour le réaliser, on peut\ndécrire un réseau de neurones à deux couches prenant en entrée un\nvecteur <span class=\"math inline\">\\((x,y) \\in \\R^2\\)</span> :</p>\n<ul>\n<li><p>La première couche est constituée de <span\nclass=\"math inline\">\\(10\\)</span> neurones réalisant les <span\nclass=\"math inline\">\\(10\\)</span> demi plans ;</p></li>\n<li><p>La seconde couche est constituée de <span\nclass=\"math inline\">\\(1\\)</span> neurone réalisant la fonction logique\n<code>ET</code> sur <span class=\"math inline\">\\(\\{0,1\\}^{10}\\)</span> :\nil suffit de prendre par exemple :</p>\n<div class=\"center\">\n<p><svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='155.063pt' height='74.149pt' viewBox='0 0 155.063 74.149'><defs><font id='PXBGHL-CMSY7' horiz-adv-x='0'><font-face font-family='PXBGHL-CMSY7' units-per-em='1000' ascent='782' descent='951'/><glyph unicode='−' horiz-adv-x='892' vert-adv-y='892' glyph-name='minus' d='M744 226C760 226 784 226 784 250C784 275 761 275 744 275H148C132 275 108 275 108 251C108 226 131 226 148 226H744Z'/></font><font id='ZXILHJ-CMR5' horiz-adv-x='0'><font-face font-family='ZXILHJ-CMR5' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='0' horiz-adv-x='680' vert-adv-y='680' glyph-name='zero' d='M601 320C601 392 601 666 340 666S79 392 79 320C79 247 79-22 340-22S601 247 601 320ZM340 11C303 11 219 24 194 125C180 179 179 250 179 332C179 406 179 475 195 532C220 616 297 633 340 633C414 633 467 595 487 525C501 474 501 391 501 332C501 264 501 183 486 123C460 26 380 11 340 11Z'/><glyph unicode='1' horiz-adv-x='680' vert-adv-y='680' glyph-name='one' d='M398 636C398 666 395 666 362 666C291 602 180 602 160 602H143V558H160C183 558 248 561 306 586V86C306 55 306 44 200 44H150V0C205 4 294 4 352 4S499 4 554 0V44H504C398 44 398 55 398 86V636Z'/></font><font id='YZCNLZ-CMMI7' horiz-adv-x='0'><font-face font-family='YZCNLZ-CMMI7' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='.' horiz-adv-x='339' vert-adv-y='339' glyph-name='period' d='M227 57C227 93 197 115 170 115C137 115 112 88 112 58C112 22 142 0 169 0C202 0 227 27 227 57Z'/><glyph unicode='H' horiz-adv-x='935' vert-adv-y='935' glyph-name='H' d='M841 602C850 639 852 647 926 647C948 647 960 647 960 669C960 673 957 683 944 683C915 683 842 679 813 679C796 679 761 679 744 680C724 681 700 683 681 683C675 683 660 683 660 661C660 647 672 647 692 647C693 647 712 647 730 645C751 643 753 641 753 631C753 630 753 624 749 609L690 373H355L413 605C422 639 424 647 501 647C518 647 531 647 531 669C531 673 528 683 515 683C486 683 413 679 384 679C367 679 332 679 315 680C295 681 271 683 252 683C246 683 231 683 231 661C231 647 243 647 263 647C264 647 283 647 301 645C322 643 324 641 324 631C324 629 324 624 320 609L187 78C179 44 177 36 99 36C82 36 69 36 69 15C69 5 76 0 85 0C114 0 186 4 215 4C232 4 267 4 284 3C304 2 329 0 348 0C353 0 369 0 369 21C369 36 359 36 336 36C320 36 316 36 298 38C276 41 276 43 276 53C276 54 276 60 280 75L346 337H681L616 78C608 44 606 36 528 36C511 36 498 36 498 15C498 5 505 0 514 0C543 0 615 4 644 4C661 4 696 4 713 3C733 2 758 0 777 0C782 0 798 0 798 21C798 36 788 36 765 36C749 36 745 36 727 38C705 41 705 43 705 53C705 59 708 69 709 75L841 602Z'/><glyph unicode='x' horiz-adv-x='647' vert-adv-y='647' glyph-name='x' d='M249 106C239 72 206 18 155 18C152 18 122 18 101 32C142 45 145 81 145 87C145 109 128 124 105 124C77 124 48 100 48 63C48 13 104-10 153-10C199-10 240 19 265 61C289 8 344-10 384-10C499-10 560 115 560 143C560 156 547 156 544 156C530 156 529 151 525 139C504 70 444 18 388 18C348 18 327 45 327 83C327 109 351 200 379 311C399 388 444 413 477 413C479 413 510 413 531 399C499 390 487 362 487 344C487 322 504 307 527 307S583 326 583 368C583 424 519 441 479 441C429 441 389 408 367 370C349 411 303 441 247 441C135 441 71 318 71 288C71 275 85 275 88 275C101 275 102 279 107 292C132 370 195 413 244 413C277 413 304 395 304 347C304 327 292 277 283 243L249 106Z'/></font><font id='NGUJSL-CMR7' horiz-adv-x='0'><font-face font-family='NGUJSL-CMR7' units-per-em='1000' ascent='750' descent='250'/><glyph unicode='0' horiz-adv-x='569' vert-adv-y='569' glyph-name='zero' d='M516 319C516 429 503 508 457 578C426 624 364 664 284 664C52 664 52 391 52 319S52-20 284-20S516 247 516 319ZM284 8C238 8 177 35 157 117C143 176 143 258 143 332C143 405 143 481 158 536C179 615 243 636 284 636C338 636 390 603 408 545C424 491 425 419 425 332C425 258 425 184 412 121C392 30 324 8 284 8Z'/><glyph unicode='1' horiz-adv-x='569' vert-adv-y='569' glyph-name='one' d='M335 636C335 663 333 664 305 664C241 601 150 600 109 600V564C133 564 199 564 254 592V82C254 49 254 36 154 36H116V0C134 1 257 4 294 4C325 4 451 1 473 0V36H435C335 36 335 49 335 82V636Z'/></font></defs><style type='text/css'><![CDATA[text.f0 {font-family:NGUJSL-CMR7;font-size:6.97px} text.f1 {font-family:YZCNLZ-CMMI7;font-size:6.97px} text.f2 {font-family:ZXILHJ-CMR5;font-size:4.98px} text.f3 {font-family:PXBGHL-CMSY7;font-size:6.97px} ]]></style><g id='page1'><path d='M111.74537 39.336004C111.74537 25.245734 100.32327 13.823634 86.233 13.823634S60.72063 25.245734 60.72063 39.336004S72.14273 64.848374 86.233 64.848374S111.74537 53.426274 111.74537 39.336004Z' fill='#e6e6e6'/><path d='M111.74537 39.336004C111.74537 25.245734 100.32327 13.823634 86.233 13.823634S60.72063 25.245734 60.72063 39.336004S72.14273 64.848374 86.233 64.848374S111.74537 53.426274 111.74537 39.336004Z' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/><path d='M64.13858 26.579844L27.31451 5.319504' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><text class='f0' x='54.759146' y='-55.908519' transform='matrix(.999455 0 0 .999455 0 74.149)'>1</text><text class='f1' x='14.78394' y='-67.789042' transform='matrix(.999455 0 0 .999455 0 74.149)'>x</text><text class='f2' x='19.304961' y='-66.812557' transform='matrix(.999739 0 0 .999739 0 74.149)'>1</text><path d='M61.10797 34.905924L19.2329 27.522424' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><text class='f1' x='49.158199' y='-44.812568' transform='matrix(.999455 0 0 .999455 0 74.149)'>...</text><text class='f1' x='8.013631' y='-46.199812' transform='matrix(.999455 0 0 .999455 .000006 74.149)'>...</text><path d='M61.10797 43.766084L19.2329 51.149584' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><text class='f0' x='50.720348' y='-33.006005' transform='matrix(.999455 0 0 .999455 0 74.149)'>1</text><text class='f1' x='3.318191' y='-21.984014' transform='matrix(.999455 0 0 .999455 0 74.149)'>x</text><text class='f2' x='7.835955' y='-20.99452' transform='matrix(.999739 0 0 .999739 0 74.149)'>10</text><path d='M64.13858 52.092164L33.5955 69.726244' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><path d='M28.004782 72.953969C28.896101 74.497814 30.870162 75.026782 32.414006 74.135462C33.95786 73.244138 34.486819 71.270083 33.5955 69.726238S30.730129 67.65342 29.186276 68.544744C27.642431 69.436064 27.113463 71.410124 28.004782 72.953969Z' stroke='#000' fill='none' stroke-width='1.594003' stroke-miterlimit='10'/><text class='f3' x='49.662924' y='-9.187991' transform='matrix(.999455 0 0 .999455 .000004 74.149)'>−</text><text class='f0' x='55.886531' y='-9.187991' transform='matrix(.999455 0 0 .999455 .000004 74.149)'>10</text><path d='M111.74537 39.336004H147.45154' stroke='#000' fill='none' stroke-width='1.59404' stroke-miterlimit='10'/><path d='M154.26602 39.336004C152.24687 38.957434 148.96587 37.821674 146.69438 36.496644V42.175364C148.96587 40.850334 152.24687 39.714574 154.26602 39.336004'/><text class='f1' x='114.333666' y='-19.914143' transform='matrix(.999455 0 0 .999455 0 74.149)'>H</text></g></svg></p>\n</div>\n<p>avec <span class=\"math inline\">\\((x_1,\\cdots,x_{10}) \\in\n\\{0,1\\}^{10}\\)</span> en entrée, les poids <span\nclass=\"math inline\">\\((a_1,\\cdots,a_{10}) = (1,\\cdots,1)\\)</span>, un\nbiais <span class=\"math inline\">\\(a_{11} = -10\\)</span> et une fonction\nd’activation Heaviside.</p></li>\n</ul>\n"
      }
    }
  ]
}